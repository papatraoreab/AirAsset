@model AirAsset.Models.Moyen

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Moyens", null, FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="jumbotron">
    <div class="form-horizontal">
        <h4>Moyen</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.moyenID)

        <div class="form-group">
            @Html.LabelFor(model => model.moyenCODE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.moyenCODE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.moyenCODE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.secteur, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.secteur, new SelectList(Model.MoyensCollection, "secteur", "secteur"), new { id = "normalDropDown" })
                @Html.ValidationMessageFor(model => model.secteur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.program, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.program, new SelectList(Model.MoyensCollection, "program", "program"), new { id = "normalDropDown" })
                @Html.ValidationMessageFor(model => model.program, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.entrepot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.entrepot, new SelectList(Model.MoyensCollection, "entrepot", "entrepot"), new { id = "normalDropDown" })
                @Html.ValidationMessageFor(model => model.entrepot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.type, new SelectList(Model.MoyensCollection, "type", "type"), new { id = "normalDropDown" })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.poids, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.poids, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.poids, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cmu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cmu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cmu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hauteur, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hauteur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hauteur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.longueur, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.longueur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.longueur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.largeur, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.largeur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.largeur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vVent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vVent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vVent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.r_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.r_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.r_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.t_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.t_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--start customisation, added line to edit file on Edit View-->

        @if (Model.Files.Any(f => f.FileType == FileType.Capture))
        {
            <div class="form-group">
                <span class="control-label col-md-2"><strong>Current Capture</strong></span>
                <div class="col-md-10">
                    <img src="~/File?id=@Model.Files.First(f => f.FileType == FileType.Capture).fileId" alt="capture" width="200" height="150" />

                </div>
            </div>
        }

        <div class="form-group">
            @Html.Label("Capture", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="Capture" name="upload" />
            </div>
        </div>


        <!--end customisation-->



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

</div>
}

<hr />
<div>
    @Html.ActionLink("Retour à la liste des moyens", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
